mixin bbCodes(text)
    -
        text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')

        //
        const bbtags = {
            'b' : 'b',
            'i' : 'i',
            'u' : 'u',
            '`' : 'em',
            's' : 's',
        }

        //
        text = text.replace(
            /([bius`]+)\[([^\[\]]*)\]/ig,
            function(all, modifiers, inner) {

                //
                modifiers = modifiers.toLowerCase()

                //
                let start = ''
                let end = ''

                for(const i in bbtags) {
                    if(modifiers.includes(i)) {
                        const v = bbtags[i]
 
                        start = start + `<${v}>`
                        end = `</${v}>` + end
                    }
                }

                return start + inner + end
            }
        )

        //
        const urlRegex = /\[([^\[\]]*)\]((https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;

        text = text.replace(
            urlRegex,
            function(all, label, url) {
                const title = (label === '') ? url : label
                return '<a href="' + url + '">' + title + '</a>'
            }
        )

        //
        let lines = text.split(/\r\n|\r|\n/)
        let preOpens = []
        let preCloses = []
        let isInPre = false

        for(let i = 0; i < lines.length; ++i) {

            //
            if(!isInPre && lines[i] === "```pre") {
                preOpens.push(i)
                isInPre = true
            }

            //
            if(isInPre && lines[i] === "```") {
                preCloses.push(i)
                isInPre = false
            }
        }

        //
        let content = ''
        isInPre = false

        for(let i = 0; i < lines.length; ++i) {
            if(preOpens.indexOf(i) != -1) {
                content += '<pre>'
                isInPre = true
            }
            else if(preCloses.indexOf(i) != -1) {
                content += '</pre>'
                isInPre = false
            }
            else {
                content += lines[i]

                if(i != lines.length - 1) {
                    content += isInPre
                        ? "\r\n"
                        : '<br>'
                }
            }
        }

    |!{content}
