doctype html
html
  head
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width, initial-scale=1")
    title=html_title
    link(rel='stylesheet', href=`${cssDir}/style.css`)
    link(rel="icon" href="/images/favicon-32.png" sizes="32x32")
    block head

    if max_width !== null
      style.
        body {
          background: ##{twoBgColor};
        }

        #body2 {
          max-width: #{max_width}px;
          max-width: #{max_width/16}rem;
          margin: 0 auto;
          background: ##{oneBgColor};
          padding: 10px;
          padding: .625rem;
          border-radius: 4px;
        }

        @media(max-width: #{(max_width + 40)/16}em) {
          body {
            background: ##{oneBgColor};
          }

          #body2 {
            padding: 0;
            max-width: 100%;
          }
        }
    else
      style.
        body {
          background: ##{oneBgColor};
        }

    style.
      body, .puser, .fuser {
        color: ##{mainTextColor};
      }

      .ptitle, .ptitle-s {
        color: ##{postLinkColor};
      }

      .ptitle:visited, .ptitle-s:visited {
        color: ##{postLinkVisitedColor};
      }

      .tag1 {
        color: ##{groupTextColor};
        background: ##{groupBgColor};
      }

      .puser2, .pdate2, .pby2, .pcount2, .cuser2,
      .cdate2, .cby2, .clinks2-single a, .clinks2 a,
      .puser3 {
        color: ##{hiddenColor};
      }

      .domname1 {
        color: ##{domainNameColor};
      }

      .unfollow {
        background: ##{unfollowBgColor};
        color: ##{unfollowTextColor};
        border: 1px solid ##{unfollowLineColor};
      }

      .follow {
        background: ##{followBgColor};
        color: ##{followTextColor};
        border: 1px solid ##{followLineColor};
      }

      .plinks a, .clinks-single a, .in-h1-url, .sort1 a {
        color: ##{mainLinkColor};
      }

      .main-nav a, .settings-nav a {
        color: ##{navLinkColor};
      }

      .main-footer a {
        color: ##{footerLinkColor};
      }

      .backpost-nav a, .more {
        background: ##{pageBgColor};
        color: ##{pageTextColor};
        border: 1px solid ##{pageLineColor};
      }

      .alert1, .alert2, .alert3 {
        background: ##{highBgColor};
        color: ##{highTextColor};
      }

      .alert1 a, .alert2 a, .alert3 a {
        color: ##{highLinkColor};
      }

      .cdate, .cby {
        color: ##{commentHeadColor};
      }

      .cuser {
        color: ##{commentUserColor};
      }

      .clinks a {
        color: ##{commentFootColor};
      }

      pre {
        background: ##{preBgColor};
        color: ##{preTextColor};
      }

      .main-text pre a, .the-post-content pre a, .cmeat pre a, .the-comment-content pre a {
        color: ##{preLinkColor};
      }

      .uerror1 {
        color: ##{errorTextColor};
      }

      .usuccess1 {
        color: ##{successTextColor};
      }

      main em {
        background: ##{emBgColor};
        color: ##{emTextColor};
      }

      .main-text a, .the-post-content a, .cmeat a, .the-comment-content a {
        color: ##{contentLinkColor};
      }

      .comments :target {
        border: 2px solid ##{commentOutlineColor};
      }

    if posts_vertical_spacing
      style.
        .posts > div {
          margin-bottom: #{posts_vertical_spacing}px;
          margin-bottom: #{posts_vertical_spacing/16}rem;
        }
  
    if post_layout == 'single-line'
      if max_width !== null && max_width < singleLineCutoff
        style.
          .pinfo1-single {
            display: block;
            margin-top: 2px;
            margin-top: .125rem;
          }
      else
        style.
          @media(max-width: #{(singleLineCutoff + 40)/16}em) {
            .pinfo1-single {
              display: block;
              margin-top: 2px;
              margin-top: .125rem;
            }
          }

  body
    div#body2
      header
        div.main-logo
          a(href="/")
            img(src="/images/logo2.png")
            span
              span#peaches Comment
              | 
              span#stink Castles
        nav.main-nav
          ul
            li
              a(href="/") home

            if user
              li
                a(href="/new") new post
              li
                a(href="/following") following
              li
                a(href="/inbox") inbox
              li
                a(href="/settings") settings
              li
                a(href="/help") help
              li
                a(href="/logout") log out

              //- if user never logged out, public_id may not be set
              if typeof user.public_id == 'undefined'
                li=user.username
              else
                li
                  a(href=`/u/${user.public_id}`)=user.username

            else
              li
                a(href="/sign-up") sign up
              li
                a(href="/login") log in
              li
                a(href="/settings") settings
              li
                a(href="/help") help
      main(class=main_class ? main_class : '')
        block content
      footer.main-footer
        nav.main-footer-nav
          ul
            li
              a(href="/privacy-policy") privacy policy
            li
              a(href="/contact-us") contact us
            li
              a(href="/api") API
            li
              a(href="https://github.com/ferg1e/comment-castles") GitHub
